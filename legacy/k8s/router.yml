---
apiVersion: v1
kind: ConfigMap
metadata:
  name: router
data:
  supervise.conf: |
    :verify bin/verify-java

    router bin/run-druid router conf/mounted/service

  runtime.properties: |
    druid.service=druid/router
    druid.plaintextPort=8888

    # HTTP proxy
    druid.router.http.numConnections=50
    druid.router.http.readTimeout=PT5M
    druid.router.http.numMaxThreads=100
    druid.server.http.numThreads=100

    # Service discovery
    druid.router.defaultBrokerServiceName=druid/broker
    druid.router.coordinatorServiceName=druid/coordinator

    # Management proxy to coordinator / overlord: required for unified web console.
    druid.router.managementProxy.enabled=true

  jvm.config: |
    -server
    -XX:+UnlockExperimentalVMOptions
    -XX:MaxRAMPercentage=0.9
    -XX:+UseG1GC
    -XX:MaxDirectMemorySize=128m
    -XX:+ExitOnOutOfMemoryError
    -Duser.timezone=UTC
    -Dfile.encoding=UTF-8
    -Djava.io.tmpdir=var/tmp
    -Djava.util.logging.manager=org.apache.logging.log4j.jul.LogManager

  main.config: |
    org.apache.druid.cli.Main server router

---
apiVersion: v1
kind: Service
metadata:
  name: router
  labels:
    app: router
spec:
  ports:
  - port: 8888
    name: router
  selector:
    app: router
---
apiVersion: v1
kind: Service
metadata:
  name: router-headless
  labels:
    app: router
spec:
  clusterIP: None
  ports:
  - port: 8888
    name: router
  selector:
    app: router
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: router
spec:
  selector:
    matchLabels:
      app: router
  serviceName: router-headless
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: OrderedReady
  template:
    metadata:
      labels:
        app: router
    spec:
      containers:
      - name: coordinator
        imagePullPolicy: Never
        image: dmarkwat.io/apache/druid
        resources:
          requests:
            memory: 256M
            cpu: 750m
        args:
        - -c
        - /druid/conf/mounted/service/router/supervise.conf
        - --stdout
        ports:
        - name: router
          containerPort: 8888
        volumeMounts:
        - name: common
          mountPath: /druid/conf/mounted/service/_common
        - name: service
          mountPath: /druid/conf/mounted/service/router
        - name: druiddata
          mountPath: /var/druid
      volumes:
      - name: common
        configMap:
          name: common
      - name: service
        configMap:
          name: router
      - name: druiddata
        persistentVolumeClaim:
          claimName: shared
  # volumeClaimTemplates:
  # - metadata:
  #     name: druiddata
  #   spec:
  #     accessModes: ["ReadWriteMany"]
  #     volumeName: shared
  #     resources:
  #       requests:
  #         storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: router-lb
  labels:
    app: router
spec:
  type: LoadBalancer
  ports:
  - port: 8888
    name: router
  selector:
    app: router
