#!/bin/bash
# Adapted from The Kubernetes Authors' version
# SPDX-License-Identifier: Apache-2.0

set -e

function cleanup() {
  rm -rf $1
}

function parseYaml {
  local file=$1

  chartName=$(cat $file | yq -r '.chartName // ""')
  chartHome=$(cat $file | yq -r '.chartHome // ""')
  chartRelease=$(cat $file | yq -r '.chartRelease // ""')
  values=$(cat $file | yq -ry '.values // {}')
  helmBin=$(cat $file | yq -r '.helmBin // ""')
  releaseName=$(cat $file | yq -r '.releaseName // ""')
  releaseNamespace=$(cat $file | yq -r '.releaseNamespace // ""')
}

parseYaml $1

TMP_DIR=$(mktemp -d)

trap "cleanup $TMP_DIR" ERR

# Where all the files generated by 'helm init' live.
if [ -z "$helmHome" ]; then
  helmHome=$TMP_DIR/dotHelm
fi

# Where helm charts are unpacked.
if [ -z "$chartHome" ]; then
  chartHome=$TMP_DIR/charts
fi

# Set default chartRelease to "stable"
if [ -z "$chartRelease" ]; then
  chartRelease="stable"
fi

if [ -z "$helmBin" ]; then
  helmBin=helm
fi

if [ -z "$releaseName" ]; then
  releaseName=release-name
fi

if [ -z "$releaseNamespace" ]; then
  releaseNamespace=default
fi

function doHelm {
  trap "cleanup $TMP_DIR" ERR

  $helmBin --home $helmHome $@
}

# The init command is extremely chatty
doHelm init --client-only >& /dev/null

if [ ! -d "$chartHome/$chartName" ]; then
  doHelm fetch $chartVersionArg \
      --untar \
      --untardir $chartHome \
      ${chartRelease}
fi

cat <<EOF | doHelm template --name $releaseName --namespace $releaseNamespace --values - $chartHome/*
$values
EOF

cleanup $TMP_DIR
